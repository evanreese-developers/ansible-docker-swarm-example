---
- hosts: all
  become: true
  vars:
    - swarm_address: DockerHost #You must configure the ip of the host in /etc/hosts prior to using this file
    - db_image: mydb
    - app_image: myapp
    - webserver_image: mywebserver
    - db_service: db_server
    - app_service: app_server
    - webserver_service: webserver
    - db_data_vol: /opt/mongo/db
    - db_configdb_vol: /opt/mongo/configdb
    - app_replicas: 3
    - webserver_replicas: 5
    - webserver_port: 8080
    - network_name: blog_network
  tasks: 
    - name: Install prerequisites
      apt: 
        name: ['python-pip', 'python-apt'] 
        state: present
    - name: Install docker
      pip:
        name: docker
        state: present
    - name: Install Docker apt Repository Key
      apt_key:
        url: "https://download.docker.com/linux/ubuntu/gpg"
        state: present
    - name: Install Docker apt Repository
      apt_repository:
        repo: "deb [arch=amd64] https:download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
        state: present
    - name: Install Docker-ce
      apt: 
        name: docker-ce
        update_cache: yes
        state: present
    - name: Upload the DB image
      synchronize:
        src: ../parent-tracking-database
        dest: /opt/mydb
    - name: Upload the app image
      synchronize:
        src: ../parent-tracking-application
        dest: /opt/myapp
    - name: Upload the webserver image
      synchronize:
        src: ../parent-tracking-web
        dest: /opt/mywebserver
    - name: Build the DB image
      docker_image:
        name: "{{db_image}}"
        path: /opt/mydb/parent-tracking-database
    - name: Build the app image
      docker_image:
        name: "{{app_image}}"
        path: /opt/myapp/parent-tracking-application
    - name: Build the webserver image
      docker_image:
        name: "{{webserver_image}}"
        path: /opt/mywebserver/parent-tracking-web
    - name: Create the Docker Swarm
      docker_swarm:
        state: present
        advertise_addr: 172.28.128.17
    - name: Create the Swarm network
      docker_network:
        name: "{{network_name}}"
        driver: overlay
    - name: Create the necessary paths for the DB volumes
      file: path="{{item}}" state=directory recurse=yes
      with_items:
        - "{{db_data_vol}}"
        - "{{db_configdb_vol}}"
    - name: Create the DB Service
      docker_swarm_service:
        name: "{{db_service}}"
        networks: "{{network_name}}"
        mounts:
          - type: bind
            source: "{{db_data_vol}}"
            target: /data/db
          - type: bind
            source: "{{db_configdb_vol}}"
            target: /data/configdb
        image: "{{db_image}}"
        replicas: 1
        restart_config:
          condition: on-failure
    - name: Create the APP Service
      docker_swarm_service:
        name: "{{app_service}}"
        networks: "{{network_name}}"
        image: "{{app_image}}"
        replicas: "{{app_replicas}}"
        restart_config:
          condition: on-failure
    - name: Create the webserver Service
      docker_swarm_service:
        name: "{{webserver_service}}"
        networks: "{{network_name}}"
        image: "{{webserver_image}}"
        replicas: "{{webserver_replicas}}"
        restart_config:
          condition: on-failure
        publish:
          - published_port: "{{webserver_port}}"
            target_port: 80